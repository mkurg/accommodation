#!/usr/bin/python3
# -*- coding: utf-8 -*-

import os
import gzip
import json
import re
import numpy as np
from lemmatizer import lemmatize


list_of_gzip_files = []

for root, dirs, files in os.walk('./exthdd/kribrum/twitter_1/not_single_tweets'):
    for name in files:
        if name.endswith('.gz'):
            list_of_gzip_files.append(root + '/' + name)

w = 0
u = 0
word2index = {}
user2index = {}
users = [975007477760, 3192058990, 73211498, 2309871850, 308019008, 3405998234, 1091232763, 3239176276, 11051452, 2606958295, 948100322, 2255162534, 318904282, 3677305096, 2192652803, 534498162, 196323105, 191943753, 463237907, 346541844, 245712735, 54837923, 2939627505, 605370720, 1893556075, 1005757434, 534498162, 3065961100, 102374121, 2336595908, 81811956, 24725480, 3336905969, 2434786961, 1451169804, 3065996224, 2198327545, 786674540, 847965134, 3331605687, 1549582345, 216270801, 1486081754, 2721981623, 256253131, 2980378931, 2849925924, 2248848061, 2857851176, 49587902, 887100656, 4165127477, 216826811, 2873164789, 752974416, 2427346099, 2712690458, 163802276, 2802106989, 1332350857, 395254720, 32421706, 193681556, 233838281, 313147783, 272383595, 3288776127, 2613120188, 2986211885, 293428576, 1401376105, 73211498, 2431618531, 364298454, 183450687, 1731948722, 2458446188, 4022656131, 1906742070, 2281456738, 332353230, 2676619071, 1085538282, 3386612039, 2556882924, 1857513896, 3703568535, 3340949519, 160154524, 66539564, 321788983, 794167490, 3306514049, 3366044177, 1917954145, 2184757626, 2951775802, 1882888038, 3252107403, 1354796924, 60900315, 307904254, 49425327, 2223182784, 483232231, 582545078, 2793581547, 3076946423, 1270792748, 2196640054, 609993610, 3601638801, 857600516, 311604624, 786674540, 3303205432, 2260669602, 4310999121, 2408853578, 190405663, 3147465640, 3352916427, 2758090043, 1728391280, 2809949291, 1859329766, 3046146030, 201152943, 1005757434, 3345489418, 1001620346, 2261596644, 1603897410, 2840625357, 3134657355, 879053918, 2438271659, 56736106, 701649552, 1286334152, 456723411, 3790235962, 3422588631, 2795410558, 3105120057, 1617561002, 1857455582, 3041307664, 1905219026, 3375572261, 174968553, 482094696, 2469471619, 34993911, 322469069, 2759534042, 1067894210, 755370601, 2722261263, 2294826002, 84840297, 532185974, 558544275, 2171918378, 30750869, 824743369, 350705311, 2989434699, 408356103, 210837991, 1665380480, 337247147, 243360458, 2539592549, 62018121, 72525490, 605342371, 2605900108, 209180119, 1472707796, 827680052, 183977596, 58908838, 960758575, 703790590, 1262226546, 3374583573, 108232692, 2417479661, 3259199607, 1655708533, 188989961, 132811662, 110496970, 900279164, 417931595, 3372570045, 1400214637, 540896699, 1412243478, 212253488, 243132960, 1059833346, 3622170015, 2258480190, 1864626524, 204208107, 1426265617, 2856791147, 2838814382, 549101444, 3360415768, 914600694, 3108362224, 2309864365, 3512217263, 2770931825, 2639863807, 351607359, 1334222810, 4066929910, 2770931825, 1851521424, 20683579, 1702549862, 3418821804, 3356893563, 23748540, 873608460, 1887213578, 3351265767, 1731948722, 1115803111, 32421706, 292207675, 42004065, 1739764898, 592524918, 1369874173, 278550304, 540257631, 1702244784, 2527738740, 2929199595, 868446283, 1394553536, 1270747092, 188894237, 2489556660, 2183646904, 49390837, 2233135172, 46384263, 3004057085, 2975170468, 633632016, 2722261263, 3307989237, 1574582630, 361263394, 505941915, 4274268741, 232584787, 1057301034, 6663512, 3158473263, 631648472, 3300575902, 2766941350, 106705144, 2426036251, 347101392, 893964217, 3026976334, 1900580588, 1366839678, 2217612404, 2161423597, 332967938, 921483210, 4224602427, 2461715238, 2361029106, 507767296, 3805603161, 246862720, 456723411, 529114623, 4061244298, 3231623744, 329208812, 3318990268, 1351741656, 478841489, 3748793057, 541796560, 4136394916, 2500863950, 2202010542, 173611940, 3184112849, 520371463, 3040076848, 181564387, 2239244693, 174179693, 4339733386, 1387010245, 2829874062, 2575176415, 1334400780, 3120997185, 335426959, 941289566, 3358531007, 3187759622, 2460311114, 764295145, 2856791147, 454989596, 82830816, 769800894, 136329115, 146882655, 429909878, 163482457, 348438895, 327892176, 310441613]

handlers = [open(str(a)+"_tweets.txt", 'w') for a in users]
repl_handlers = [open(str(a)+"_tweet_replies.txt", 'w') for a in users]

a = np.array([[0, 0], [0, 0]], dtype=int)

dict_of_words = {}
def add_to_matrix(user_id, text):
    global a
    global w
    global user2index
    global word2index
    tokens = lemmatize(text)
    # matrix authors * words
    if not user_id in user2index:
        user2index[user_id] = len(user2index)
        a = np.insert(a, a.shape[0], 0, axis=0)
        print("Added a row: %s" % repr(a.shape))

    # global dict
    for token in tokens:
        if token in dict_of_words:
            dict_of_words[token] += 1
        else:
            dict_of_words[token] = 1
        if token in word2index:
            a[user2index[user_id]][word2index[token]] += 1
        else:
            a = np.insert(a, a.shape[1], 0, axis=1)
            word2index[token] = w
            a[user2index[user_id]][w] += 1
            w += 1

n = 0

for file_name in sorted(list_of_gzip_files):
    with gzip.open(file_name, mode='rb') as input_file:
        file_content = input_file.readlines()
        print('File read: ' + file_name)
        for line in file_content:
            line = line.decode('utf-8')
            data_dict = json.loads(line)
            for k, v in data_dict.items():
                n += 1
                if v['user']['id'] in users:
                    if v['in_reply_to'] == None: # FIXME: check field names!
                        # Writing full text if not a reply
                        handlers[users.index(v['user']['id'])].write(v['text'] + "\n")
                    else:
                        # Writing text and reference to find if IS a reply
                        repl_handlers[users.index(v['user']['id'])].write(json.dumps({'repl_to': v['in_reply_to'], 'id': k, 'text': v['text']}) + "\n")
                    print(v['user']['id'])
                    add_to_matrix(v['user']['id'], v['text'])
                    try:
                        print(dict_of_words["на"])
                        print(n)
                    except KeyError:
                        pass

for h in handlers + repl_handlers:
    h.close()